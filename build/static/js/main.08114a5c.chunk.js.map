{"version":3,"sources":["components/Comment/Comment.module.css","components/EditComment/EditComment.module.css","components/CommentForm/CommentForm.module.css","containers/Header/Header.module.css","components/UI/Loader/Loader.module.css","containers/Footer/Footer.module.css","containers/Discussion/Discussion.module.css","components/UI/Modal/Modal.module.css","containers/Header/Header.js","components/CommentForm/CommentForm.js","config.js","store/actions/loadComments.js","store/actions/ActionTypes.js","store/actions/createComment.js","components/EditComment/EditComment.js","components/Comment/Comment.js","components/UI/Modal/Modal.js","components/UI/Loader/Loader.js","containers/Discussion/Discussion.js","store/actions/deleteComment.js","store/actions/updateComment.js","store/actions/clearErr.js","containers/Footer/Footer.js","App.js","serviceWorker.js","store/reducers/rootReducer.js","store/store.js","index.js"],"names":["module","exports","connect","state","comments","props","className","cls","Header","logo","src","alt","length","CommentForm","userState","user","value","author","touched","text","canSubmit","useState","data","setData","updateData","e","newData","target","name","useEffect","Form","onSubmit","preventDefault","type","placeholder","id","onChange","Comment_Button","disabled","onClick","formHandler","parentId","showForm","sendData","config","url","process","successLoadComents","errorLoadComments","message","createCommentSuccess","EditComment","comment","setComment","Comment_text","ButtonWrapper","Button_save","updateComment","cancel","Button_cancel","Comment","show","setShow","edit","setEdit","replyTo","form","_id","updatedAt","updateAt","Date","toLocaleString","replies","button","ReplyButton","editShow","Comment_body","console","log","Comment_header","UserInfo","User","CommentInfoWrapepr","ButtonsWrapper","CommentButton","CommentState","deleteHandler","created","Modal","Modal_text","Loader","Loader_wrapper","Loader_items","loading","err","dispatch","createComment","body","a","fetch","method","headers","JSON","stringify","res","json","ok","Error","loadComments","deleteComment","clearErr","renderComment","key","content","map","filterComment","timer","setTimeout","clearTimeout","Discussion","CommentsWrapper","Footer","getFullYear","Author","Navbar","href","rel","App","Boolean","window","location","hostname","match","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.08114a5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Comment\":\"Comment_Comment__2AoBx\",\"Comment_header\":\"Comment_Comment_header__1XM-L\",\"User\":\"Comment_User__2vKAZ\",\"Comment_body\":\"Comment_Comment_body__1TLet\",\"replies\":\"Comment_replies__22zZK\",\"UserInfo\":\"Comment_UserInfo__1tm11\",\"CommentInfoWrapepr\":\"Comment_CommentInfoWrapepr__7A0DS\",\"ButtonsWrapper\":\"Comment_ButtonsWrapper__jPxwd\",\"CommentButton\":\"Comment_CommentButton__1Ebkw\",\"ReplyButton\":\"Comment_ReplyButton__2nOP5\",\"CommentState\":\"Comment_CommentState__3yuvq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditComment\":\"EditComment_EditComment__2zMrH\",\"Comment_text\":\"EditComment_Comment_text__3QYAP\",\"Button_save\":\"EditComment_Button_save__2AcCF\",\"Button_cancel\":\"EditComment_Button_cancel___jq6A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"CommentForm_Form__3j9-B\",\"name\":\"CommentForm_name__2yIIB\",\"text\":\"CommentForm_text__fvDs9\",\"Comment_Button\":\"CommentForm_Comment_Button__3c65i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__2CCjY\",\"logo\":\"Header_logo__K0sAU\",\"comments\":\"Header_comments__1YTIP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader_wrapper\":\"Loader_Loader_wrapper__3Ke7t\",\"Loader_items\":\"Loader_Loader_items__22rP-\",\"Loader_items-1\":\"Loader_Loader_items-1__26y6C\",\"Loader_items-2\":\"Loader_Loader_items-2__3hNlA\",\"Loader_items-3\":\"Loader_Loader_items-3__TpbK5\",\"Loader\":\"Loader_Loader__1Qzxj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Footer\":\"Footer_Footer__3BnCl\",\"Navbar\":\"Footer_Navbar__wh_HG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Discussion\":\"Discussion_Discussion__1jdJx\",\"CommentsWrapper\":\"Discussion_CommentsWrapper__3au-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2cTof\",\"Modal_text\":\"Modal_Modal_text__1IBzS\"};","import React from \"react\";\r\nimport cls from \"./Header.module.css\";\r\nimport { connect } from \"react-redux\";\r\n\r\nfunction Header(props) {\r\n  return (\r\n    <header className={cls.Header}>\r\n      <img className={cls.logo} src=\"./awesome.svg\" alt=\"awesome logo\" />\r\n      <p className={cls.comments}>Comments: {props.comments.length}</p>\r\n    </header>\r\n  );\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    comments: state.comments\r\n  };\r\n}\r\nexport default connect(mapStateToProps)(Header);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport cls from \"./CommentForm.module.css\";\r\n\r\nexport default function CommentForm(props) {\r\n  const userState = {\r\n    user: { value: props.author, touched: false },\r\n    text: { value: \"\", touched: false },\r\n    canSubmit: false\r\n  };\r\n\r\n  const [data, setData] = useState(userState);\r\n\r\n  useEffect(() => {\r\n    setData(userState);\r\n  }, [props.author]);\r\n\r\n  function updateData(e) {\r\n    const newData = { ...data };\r\n    newData[e.target.name] = {\r\n      value: e.target.value,\r\n      touched: true\r\n    };\r\n    newData.canSubmit = !!newData.user.value && !!newData.text.value;\r\n    setData(newData);\r\n  }\r\n\r\n  function sendData(data) {\r\n    props.formHandler({\r\n      user: data.user.value,\r\n      text: data.text.value,\r\n      parentId: props.id\r\n    });\r\n    setData(userState);\r\n    props.showForm && props.showForm(false);\r\n  }\r\n  return (\r\n    <form className={cls.Form} onSubmit={e => e.preventDefault()}>\r\n      <input\r\n        className={cls.name}\r\n        type=\"text\"\r\n        placeholder=\"Your name\"\r\n        id=\"user\"\r\n        name=\"user\"\r\n        value={data.user.value}\r\n        onChange={updateData}\r\n      />\r\n      <textarea\r\n        className={cls.text}\r\n        id=\"text\"\r\n        name=\"text\"\r\n        placeholder=\"Type something...\"\r\n        value={data.text.value}\r\n        onChange={updateData}\r\n      ></textarea>\r\n      <button\r\n        className={cls.Comment_Button}\r\n        disabled={!data.canSubmit}\r\n        onClick={() => sendData(data)}\r\n      >\r\n        Comment\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","const config = {\r\n  url:\r\n    process.env.NODE_ENV === \"development\"\r\n      ? process.env.REACT_APP_API_URL\r\n      : process.env.PUBLIC_URL\r\n};\r\nexport default config;\r\n","import {\r\n  LOAD_COMMENTS_START,\r\n  LOAD_COMMENTS_SUCCESS,\r\n  LOAD_COMMENTS_ERROR\r\n} from \"./ActionTypes\";\r\nimport config from \"../../config\";\r\n\r\nexport default function loadComments() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(startLoadComments());\r\n      const res = await fetch(config.url + \"/api/comments\");\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message);\r\n      dispatch(successLoadComents(data));\r\n    } catch (err) {\r\n      dispatch(errorLoadComments(err.message));\r\n    }\r\n  };\r\n}\r\n\r\nfunction startLoadComments() {\r\n  return {\r\n    type: LOAD_COMMENTS_START\r\n  };\r\n}\r\nexport function successLoadComents(data) {\r\n  return {\r\n    type: LOAD_COMMENTS_SUCCESS,\r\n    data\r\n  };\r\n}\r\nexport function errorLoadComments(message = \"Something went wrong...\") {\r\n  return {\r\n    type: LOAD_COMMENTS_ERROR,\r\n    message\r\n  };\r\n}\r\n","export const LOAD_COMMENTS_START = \"LOAD_COMMENTS_START\";\r\nexport const LOAD_COMMENTS_SUCCESS = \"LOAD_COMMENTS_SUCCESS\";\r\nexport const LOAD_COMMENTS_ERROR = \"LOAD_COMMENTS_ERROR\";\r\n\r\nexport const CREATE_COMMENT_START = \"CREATE_COMMNET_START\";\r\nexport const CREATE_COMMENT_SUCCESS = \"CREATE_COMMNET_SUCCESS\";\r\n\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";","import { CREATE_COMMENT_SUCCESS } from \"./ActionTypes\";\r\nimport { errorLoadComments } from \"./loadComments\";\r\nimport config from \"../../config\";\r\n\r\nexport default function createComment(body) {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await fetch(config.url + \"/api/comments\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message);\r\n      dispatch(createCommentSuccess(data, body.user));\r\n    } catch (err) {\r\n      dispatch(errorLoadComments(err.message));\r\n    }\r\n  };\r\n}\r\n\r\nfunction createCommentSuccess(data, author) {\r\n  return {\r\n    type: CREATE_COMMENT_SUCCESS,\r\n    data,\r\n    author\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport cls from \"./EditComment.module.css\";\r\n\r\nexport default function EditComment(props) {\r\n  const [comment, setComment] = useState(props.comment);\r\n  function updateData(e) {\r\n    const newData = { ...comment };\r\n    newData.text = e.target.value;\r\n    setComment(newData);\r\n  }\r\n  function clickHandler() {\r\n    props.updateComment(comment);\r\n    props.cancel(false);\r\n  }\r\n  return (\r\n    <form className={cls.EditComment} onSubmit={e => e.preventDefault()}>\r\n      <textarea\r\n        className={cls.Comment_text}\r\n        name=\"text\"\r\n        id=\"text\"\r\n        value={comment.text}\r\n        onChange={updateData}\r\n      ></textarea>\r\n      <div className={cls.ButtonWrapper}>\r\n        <button className={cls.Button_save} onClick={clickHandler}>\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button\r\n          className={cls.Button_cancel}\r\n          onClick={() => props.cancel(false)}\r\n        >\r\n          <i className=\"fas fa-times\"></i>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport cls from \"./Comment.module.css\";\r\nimport CommentForm from \"../CommentForm/CommentForm\";\r\nimport EditComment from \"../EditComment/EditComment\";\r\n\r\nexport default function Comment(props) {\r\n  const [show, setShow] = useState(false);\r\n  const [edit, setEdit] = useState(false);\r\n\r\n  const replyTo = props.replyTo ? (\r\n    <p className={cls.replyTo}>reply to: {props.replyTo}</p>\r\n  ) : null;\r\n\r\n  const form = show ? (\r\n    <CommentForm\r\n      id={props.comment._id}\r\n      formHandler={props.formHandler}\r\n      showForm={setShow}\r\n      author={props.author}\r\n    />\r\n  ) : null;\r\n\r\n  const updatedAt = props.comment.updateAt ? (\r\n    <p>\r\n      this comment was edited at&nbsp;\r\n      {new Date(props.comment.updateAt).toLocaleString()}\r\n    </p>\r\n  ) : null;\r\n\r\n  const replies = props.replies ? (\r\n    <div className={cls.replies}>{props.replies}</div>\r\n  ) : null;\r\n\r\n  const button = props.replies ? (\r\n    <button className={cls.ReplyButton} onClick={() => setShow(!show)}>\r\n      <i className=\"fas fa-reply\"></i>\r\n    </button>\r\n  ) : null;\r\n\r\n  const editShow = edit ? (\r\n    <EditComment\r\n      comment={props.comment}\r\n      updateComment={props.updateComment}\r\n      cancel={setEdit}\r\n    />\r\n  ) : (\r\n    <p className={cls.Comment_body}>{props.comment.text}</p>\r\n  );\r\n  console.log(process.env);\r\n\r\n  return (\r\n    <div className={cls.Comment}>\r\n      <div className={cls.Comment_header}>\r\n        <div className={cls.UserInfo}>\r\n          <p className={cls.User}>{props.comment.user}</p>\r\n          {replyTo}\r\n        </div>\r\n        {updatedAt}\r\n        <div className={cls.CommentInfoWrapepr}>\r\n          <div className={cls.ButtonsWrapper}>\r\n            <button\r\n              className={cls.CommentButton}\r\n              onClick={() =>\r\n                props.updateComment(\r\n                  {\r\n                    _id: props.comment._id,\r\n                    state: props.comment.state + 1\r\n                  },\r\n                  \"/state\"\r\n                )\r\n              }\r\n            >\r\n              <i className=\"fas fa-thumbs-up\"></i>\r\n            </button>\r\n            <p className={cls.CommentState}>{props.comment.state}</p>\r\n            <button\r\n              className={cls.CommentButton}\r\n              onClick={() =>\r\n                props.updateComment(\r\n                  {\r\n                    _id: props.comment._id,\r\n                    state: props.comment.state - 1\r\n                  },\r\n                  \"/state\"\r\n                )\r\n              }\r\n            >\r\n              <i className=\"fas fa-thumbs-down\"></i>\r\n            </button>\r\n            <button\r\n              className={cls.CommentButton}\r\n              onClick={() => setEdit(!edit)}\r\n            >\r\n              <i className=\"fas fa-pencil-alt\"></i>\r\n            </button>\r\n            <button\r\n              className={cls.CommentButton}\r\n              onClick={() => props.deleteHandler(props.comment._id)}\r\n            >\r\n              <i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n          </div>\r\n          <time>{new Date(props.comment.created).toLocaleString()}</time>\r\n        </div>\r\n      </div>\r\n      {editShow}\r\n      {button}\r\n      {form}\r\n      {replies}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport cls from \"./Modal.module.css\";\r\n\r\nexport default function Modal(props) {\r\n  return (\r\n    <div className={cls.Modal}>\r\n      <p className={cls.Modal_text}>{props.text}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport cls from \"./Loader.module.css\";\r\n\r\nexport default function Loader(props) {\r\n  return (\r\n    <div className={cls.Loader_wrapper}>\r\n      <div className={cls.Loader}>\r\n        <div className={cls.Loader_items}>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport cls from \"./Discussion.module.css\";\r\nimport CommentForm from \"../../components/CommentForm/CommentForm\";\r\nimport { connect } from \"react-redux\";\r\nimport createComment from \"../../store/actions/createComment\";\r\nimport loadComments from \"../../store/actions/loadComments\";\r\nimport Comment from \"../../components/Comment/Comment\";\r\nimport deleteComment from \"../../store/actions/deleteComment\";\r\nimport { updateComment } from \"../../store/actions/updateComment\";\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport clearErr from \"../../store/actions/clearErr\";\r\n\r\nfunction Discussion(props) {\r\n  useEffect(() => {\r\n    props.loadComments();\r\n  }, []);\r\n\r\n  function renderComment(comment, replies, replyTo) {\r\n    return (\r\n      <Comment\r\n        key={comment._id}\r\n        comment={comment}\r\n        formHandler={props.createComment}\r\n        replies={replies}\r\n        replyTo={replyTo}\r\n        deleteHandler={props.deleteComment}\r\n        updateComment={props.updateComment}\r\n        author={props.author}\r\n      />\r\n    );\r\n  }\r\n  const content = props.loading ? (\r\n    <Loader />\r\n  ) : (\r\n    props.comments.map(comment => {\r\n      if (comment.replies) return null;\r\n      const replies = props.comments.map(filterComment =>\r\n        filterComment.replies === comment._id\r\n          ? renderComment(filterComment, null, comment.user)\r\n          : null\r\n      );\r\n      return renderComment(comment, replies);\r\n    })\r\n  );\r\n  const err = props.err ? <Modal text={props.err} /> : null;\r\n  const timer = setTimeout(() => {\r\n    props.clearErr();\r\n    clearTimeout(timer);\r\n  }, 3000);\r\n\r\n  return (\r\n    <main className={cls.Discussion}>\r\n      {err}\r\n      <div className={cls.CommentsWrapper}>\r\n        {content}\r\n        <CommentForm formHandler={props.createComment} author={props.author} />\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    comments: state.comments,\r\n    loading: state.loading,\r\n    author: state.author,\r\n    err: state.err\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createComment: data => dispatch(createComment(data)),\r\n    loadComments: () => dispatch(loadComments()),\r\n    deleteComment: id => dispatch(deleteComment(id)),\r\n    updateComment: (data, state) => dispatch(updateComment(data, state)),\r\n    clearErr: () => dispatch(clearErr())\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Discussion);\r\n","import { successLoadComents, errorLoadComments } from \"./loadComments\";\r\nimport config from \"../../config\";\r\n\r\nexport default function deleteComment(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const res = await fetch(config.url + \"/api/comments\", {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify({ id })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message);\r\n      dispatch(successLoadComents(data));\r\n    } catch (err) {\r\n      dispatch(errorLoadComments(err.message));\r\n    }\r\n  };\r\n}\r\n","import { successLoadComents, errorLoadComments } from \"./loadComments\";\r\nimport config from \"../../config\";\r\n\r\nexport function updateComment(body, state) {\r\n  return async dispatch => {\r\n    try {\r\n      const url = `${config.url}/api/comments${state ? state : \"\"}`;\r\n      const res = await fetch(url, {\r\n        method: \"PUT\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        body: JSON.stringify(body)\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message);\r\n      dispatch(successLoadComents(data));\r\n    } catch (err) {\r\n      dispatch(errorLoadComments(err.message));\r\n    }\r\n  };\r\n}\r\n","import { CLEAR_ERROR } from \"./ActionTypes\";\r\n\r\nexport default function clearErr() {\r\n  return {\r\n    type: CLEAR_ERROR\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport cls from \"./Footer.module.css\";\r\n\r\nfunction Footer(props) {\r\n  return (\r\n    <footer className={cls.Footer}>\r\n      <time>{new Date().getFullYear()}</time>\r\n      <address className={cls.Author}>Vadim Kolomiets</address>\r\n      <nav className={cls.Navbar}>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/vadim-kolomiets-704b2718b/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <i className=\"fab fa-linkedin\"></i>\r\n        </a>\r\n        <a\r\n          href=\"https://github.com/free3xm\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          <i className=\"fab fa-github\"></i>\r\n        </a>\r\n      </nav>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\nimport Header from \"./containers/Header/Header\";\nimport Discussion from \"./containers/Discussion/Discussion\";\nimport Footer from \"./containers/Footer/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Discussion />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  LOAD_COMMENTS_START,\r\n  LOAD_COMMENTS_SUCCESS,\r\n  CREATE_COMMENT_SUCCESS,\r\n  LOAD_COMMENTS_ERROR,\r\n  CLEAR_ERROR\r\n} from \"../actions/ActionTypes\";\r\n\r\nconst initialState = {\r\n  comments: [],\r\n  loading: true,\r\n  author: \"\",\r\n  err: null\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_COMMENTS_START: {\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    }\r\n    case LOAD_COMMENTS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        comments: action.data\r\n      };\r\n    case CREATE_COMMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        comments: action.data,\r\n        author: action.author\r\n      };\r\n    case LOAD_COMMENTS_ERROR:\r\n      return {\r\n        ...state,\r\n        err: action.message\r\n      };\r\n    case CLEAR_ERROR:\r\n      return {\r\n        ...state,\r\n        err: null\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./store/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}